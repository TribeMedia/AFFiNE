_format_version: '1.1'

###
### Consumers / Users
###
consumers:
  - username: anon
    keyauth_credentials:
      - key: ${anon_key}
  - username: service_role
    keyauth_credentials:
      - key: ${service_key}

###
### Access Control List
###
acls:
  - consumer: anon
    group: anon
  - consumer: service_role
    group: admin

###
### API Routes
###
services:
  ## Open Auth routes
  - name: auth-v1-open
    url: ${auth_host}/verify
    routes:
      - name: auth-v1-open
        strip_path: true
        paths:
          - /auth/v1/verify
    plugins:
      - name: cors
  - name: auth-v1-open-callback
    url: ${auth_host}/callback
    routes:
      - name: auth-v1-open-callback
        strip_path: true
        paths:
          - /auth/v1/callback
    plugins:
      - name: cors
        config:
          origins: ['*']
          methods: ['GET', 'POST', 'PUT', 'DELETE']
          headers:
            [
              'Accept',
              'Accept-Version',
              'Content-Length',
              'Content-MD5',
              'Content-Type',
              'Date',
              'X-Auth-Token',
            ]
          exposed_headers: ['X-Auth-Token']
          max_age: 3600
          credentials: true
  - name: auth-v1-open-authorize
    url: ${auth_host}/authorize
    routes:
      - name: auth-v1-open-authorize
        strip_path: true
        paths:
          - /auth/v1/authorize
    plugins:
      - name: cors

  ## Secure Auth routes
  - name: auth-v1
    _comment: 'GoTrue: /auth/v1/* -> http://auth:9999/*'
    url: ${auth_host}/
    routes:
      - name: auth-v1-all
        strip_path: true
        paths:
          - /auth/v1/
    plugins:
      - name: cors
        config:
          origins: ['*']
          methods: ['GET', 'POST', 'PUT', 'DELETE']
          headers:
            [
              'Accept',
              'Accept-Version',
              'Content-Length',
              'Content-MD5',
              'Content-Type',
              'Date',
              'X-Auth-Token',
            ]
          exposed_headers: ['X-Auth-Token']
          max_age: 3600
          credentials: true
      - name: key-auth
        config:
          hide_credentials: false
      - name: acl
        config:
          hide_groups_header: true
          allow:
            - admin
            - anon

  ## Secure REST routes
  - name: rest-v1
    _comment: 'PostgREST: /rest/v1/* -> http://rest:3000/*'
    url: ${rest_host}/
    routes:
      - name: rest-v1-all
        strip_path: true
        paths:
          - /rest/v1/
    plugins:
      - name: cors
        config:
          origins: ['*']
          methods: ['GET', 'POST', 'PUT', 'DELETE']
          headers:
            [
              'Accept',
              'Accept-Version',
              'Content-Length',
              'Content-MD5',
              'Content-Type',
              'Date',
              'X-Auth-Token',
            ]
          exposed_headers: ['X-Auth-Token']
          max_age: 3600
          credentials: true
      - name: key-auth
        config:
          hide_credentials: true
      - name: acl
        config:
          hide_groups_header: true
          allow:
            - admin
            - anon

  ## Secure GraphQL routes
  - name: graphql-v1
    _comment: 'PostgREST: /graphql/v1/* -> http://rest:3000/rpc/graphql'
    url: ${rest_host}/rpc/graphql
    routes:
      - name: graphql-v1-all
        strip_path: true
        paths:
          - /graphql/v1
    plugins:
      - name: cors
        config:
          origins: ['*']
          methods: ['GET', 'POST', 'PUT', 'DELETE']
          headers:
            [
              'Accept',
              'Accept-Version',
              'Content-Length',
              'Content-MD5',
              'Content-Type',
              'Date',
              'X-Auth-Token',
            ]
          exposed_headers: ['X-Auth-Token']
          max_age: 3600
          credentials: true
      - name: key-auth
        config:
          hide_credentials: true
      - name: request-transformer
        config:
          add:
            headers:
              - 'Content-Profile: graphql_public'
      - name: acl
        config:
          hide_groups_header: true
          allow:
            - admin
            - anon

  ## Secure Realtime routes
  - name: realtime-v1
    _comment: 'Realtime: /realtime/v1/* -> ws://realtime:4000/socket/*'
    url: ${realtime_host}/socket/
    routes:
      - name: realtime-v1-all
        strip_path: true
        paths:
          - /realtime/v1/
    plugins:
      - name: cors
        config:
          origins: ['*']
          methods: ['GET', 'POST', 'PUT', 'DELETE']
          headers:
            [
              'Accept',
              'Accept-Version',
              'Content-Length',
              'Content-MD5',
              'Content-Type',
              'Date',
              'X-Auth-Token',
            ]
          exposed_headers: ['X-Auth-Token']
          max_age: 3600
          credentials: true
      - name: key-auth
        config:
          hide_credentials: false
      - name: acl
        config:
          hide_groups_header: true
          allow:
            - admin
            - anon

  ## Storage routes: the storage server manages its own auth
  - name: storage-v1
    _comment: 'Storage: /storage/v1/* -> http://storage:5000/*'
    url: ${storage_host}/
    routes:
      - name: storage-v1-all
        strip_path: true
        paths:
          - /storage/v1/
    plugins:
      - name: cors

  ## Secure Database routes
  - name: meta
    _comment: 'pg-meta: /pg/* -> http://pg-meta:8080/*'
    url: ${meta_host}/
    routes:
      - name: meta-all
        strip_path: true
        paths:
          - /pg/
    plugins:
      - name: key-auth
        config:
          hide_credentials: false
      - name: acl
        config:
          hide_groups_header: true
          allow:
            - admin

  - name: functions-v1
    _comment: 'Functions: /functions/v1/* -> http://edge-runtime:8081/*'
    url: http://edgeruntime.supabase.svc.cluster.local:8081/
    routes:
      - name: functions-v1-all
        strip_path: true
        paths:
          - /functions/v1/
  - name: analytics-v1
    _comment: 'Analytics: /analytics/v1/* -> http://logflare:4000/*'
    url: http://analytics.supabase.svc.cluster.local:4000/
    routes:
      - name: analytics-v1-all
        strip_path: true
        paths:
          - /analytics/v1/
